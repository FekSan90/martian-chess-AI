/*
 * Copyright (c) 2008 University of Szeged
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *
 */
package game.mc;

import java.util.List;
import java.util.Random;

import game.engine.Player;
import game.engine.utils.Pair;

/**
 * Describes the players of the {@link MCGame} game.
 */
public abstract class MCPlayer implements Player<MCAction> {

  /** player color (0: player on top, 1: player on bottom) */
  public final int color;
  /** game board (8X4 half chess board like table) */
  public final int[][] board;
  /** random generator */
  public final Random r;
  
  /**
   * Player is represented by the specified color on the specified board.
   * Random numbers should be generated by the specified random object.
   * @param color color of the player (0: player on top, 1: player on bottom)
   * @param board initial game board
   * @param r for random number generation
   */
  public MCPlayer(int color, int[][] board, Random r) {
    this.color = color;
    this.board = board;
    this.r = r;
  }
  
  @Override
  public abstract MCAction getAction(List<Pair<Integer, MCAction>> prevActions);
  
  @Override
  public final int getColor() {
    return color;
  }
  
  @Override
  public final String toString() {
    return getClass().getName() + " " + color;
  }

}
